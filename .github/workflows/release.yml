on:
  release:
    types:
      - published

name: Release build & deploy
jobs:
  deploy-android:
    name: Android app
    runs-on: ubuntu-latest
    steps:
      - name: Increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.x"
      - name: Generate firebase config files
        run: |
          echo '${{ secrets.FB_CONFIG_ANDROID_DEPLOY }}' > android/app/google-services.json
          echo '${{ secrets.FB_CONFIG_WEB_BETA }}' > src/config/firebase-web-beta.ts
          echo '${{ secrets.FB_CONFIG_WEB_DEPLOY }}' > src/config/firebase-web-release.ts
      - name: Setup key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_CERTS }}
      - name: Add to host
        run: ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
      - name: Dependencies install
        run: cd android && bundle install
      - name: Cache node modules
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Yarn install
        run: yarn
      - name: Get sign ssh-keys
        run: cd android/app && git clone git@gitlab.com:moonlet/moonlet-playstore-key.git
      - name: Generate fonts and icons
        run: yarn run generate-icons
      - name: Run fastlane deploy
        run: cd android/fastlane && bundle exec fastlane deploy
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          APPCENTER_TOKEN: ${{ secrets.APPCENTER_TOKEN }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          NODE_OPTIONS: --max_old_space_size=4096
      # generate apk file and upload it to release

  deploy-ios:
    name: iOS app
    runs-on: macos-11
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - uses: actions/checkout@v1
      - name: Setup key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_CERTS }}
      - name: Add to host
        run: ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
      - name: Generate firebase config files
        run: |
          echo '${{ secrets.FB_CONFIG_IOS_DEPLOY }}' > ios/release/GoogleService-Info.plist
          echo '${{ secrets.FB_CONFIG_WEB_BETA }}' > src/config/firebase-web-beta.ts
          echo '${{ secrets.FB_CONFIG_WEB_DEPLOY }}' > src/config/firebase-web-release.ts
      - name: Generate p8 File
        run: |
          echo '${{ secrets.APPSTORE_CONNECT_FILE_KEY }}' > ios/AuthKey.p8
      - name: Dependencies install
        run: cd ios && bundle install
      - name: Cache node modules
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Yarn install
        run: yarn
      - name: Cocoapods install
        run: cd ios && pod install
      - name: Generate fonts and icons
        run: yarn run generate-icons
      - name: Run fastlane deploy
        run: xcversion select 13.0 && cd ios/fastlane && bundle exec fastlane deploy
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          # FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD:  ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          # DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS: " "
          # FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          KEYCHAIN_TOKEN: ${{ secrets.KEYCHAIN_TOKEN }}
          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}

  # deploy-ext-chrome:
  #   name: Chrome extension
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: "14.x"
  #     - uses: actions/checkout@v1
  #     - name: Cache node modules
  #       uses: actions/cache@v1
  #       id: cache
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
  #     - name: Generate firebase web config file
  #       run: |
  #         echo '${{ secrets.FB_CONFIG_WEB_BETA }}' > src/config/firebase-web-beta.ts
  #         echo '${{ secrets.FB_CONFIG_WEB_DEPLOY }}' > src/config/firebase-web-release.ts
  #     - name: NPM install
  #       run: npm i
  #     - name: Generate icons
  #       run: npm run generate-icons
  #     - name: Build Chrome extension
  #       run: BUILD=$(git rev-list --count $GITHUB_SHA) npm run ext:build:release:chrome
  #       env:
  #         NODE_OPTIONS: --max_old_space_size=4096
  #     - name: Set tag name
  #       run: |-
  #         BUILD=$(git rev-list --count $GITHUB_SHA)
  #         VERSION=$(node -e "p=require('./package.json');console.log(p.version)")
  #         echo "TAG_NAME=v${VERSION}.${BUILD}" >> $GITHUB_ENV
  #     - name: Create Chrome extenion zip
  #       run: cd extension/build/release/chrome && zip -r ./chrome-extension-$TAG_NAME.zip ./
  #     - name: Upload binaries to release
  #       uses: svenstaro/upload-release-action@v1-release
  #       with:
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
  #         file: extension/build/release/chrome/*.zip
  #         tag: ${{ env.TAG_NAME }}
  #         overwrite: true
  #         file_glob: true
