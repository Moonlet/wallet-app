on:
  release:
    types:
      - published

env:
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  KEYCHAIN_TOKEN: ${{ secrets.KEYCHAIN_TOKEN }}
  APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
  APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}

name: Release build & deploy
jobs:
  deploy-android:
    name: Android app
    runs-on: ubuntu-latest
    steps:
      - name: Increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: "14.x"

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.7"

      - name: Generate firebase config files
        run: |
          echo '${{ secrets.FB_CONFIG_ANDROID_DEPLOY }}' > android/app/google-services.json
          echo '${{ secrets.FB_CONFIG_WEB_BETA }}' > src/config/firebase-web-beta.ts
          echo '${{ secrets.FB_CONFIG_WEB_DEPLOY }}' > src/config/firebase-web-release.ts

      - name: Setup key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_CERTS }}

      - name: Add to host
        run: ssh-keyscan gitlab.com >> ~/.ssh/known_hosts

      - name: Dependencies install
        run: cd android && bundle install

      - name: Cache node modules
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock', 'package.json') }}

      - name: Yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Get sign ssh-keys
        run: cd android/app && git clone git@gitlab.com:moonlet/moonlet-playstore-key.git

      - name: Generate fonts and icons
        run: yarn run generate-icons

      - name: Run fastlane deploy
        run: cd android/fastlane && bundle exec fastlane deploy
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          APPCENTER_TOKEN: ${{ secrets.APPCENTER_TOKEN }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          NODE_OPTIONS: --max_old_space_size=4096
      # generate apk file and upload it to release

  deploy-ios:
    name: iOS app
    runs-on: macos-latest
    steps:
      - name: Setup xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: "14.x"

      - name: Setup key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_CERTS }}

      - name: Add to host
        run: ssh-keyscan gitlab.com >> ~/.ssh/known_hosts

      - name: Generate firebase config files
        run: |
          echo '${{ secrets.FB_CONFIG_IOS_DEPLOY }}' > ios/release/GoogleService-Info.plist
          echo '${{ secrets.FB_CONFIG_WEB_BETA }}' > src/config/firebase-web-beta.ts
          echo '${{ secrets.FB_CONFIG_WEB_DEPLOY }}' > src/config/firebase-web-release.ts

      - name: Generate p8 File
        run: |
          echo '${{ secrets.APPSTORE_CONNECT_FILE_KEY }}' > ios/AuthKey.p8

      - name: Dependencies install
        run: cd ios && bundle install

      - name: Cache node modules
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock', 'package.json') }}

      - name: Yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Cocoapods install
        run: cd ios && pod install

      - name: Generate fonts and icons
        run: yarn run generate-icons

      - name: Run fastlane deploy
        run: cd ios/fastlane && bundle exec fastlane deploy
