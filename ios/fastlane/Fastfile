# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
update_fastlane

default_platform(:ios)

platform :ios do
  
  desc "Submit new Beta build to Testflight"
  lane :beta do
    package = load_json(json_path: "../package.json")
    increment_version_number(version_number: package["version"])
    increment_build_number(build_number: number_of_commits)
    changelog = changelog_from_git_commits(
      commits_count: 1,
      merge_commit_filtering: "exclude_merges"
    )

    api_key = app_store_connect_api_key(
      key_id:  ENV['APPSTORE_KEY_ID'],
      issuer_id:  ENV['APPSTORE_ISSUER_ID'],
      key_filepath: "AuthKey.p8"
    )

    match(api_key: api_key,type: "development")
    if is_ci
      create_keychain(
        name: "CI",
        password: ENV['KEYCHAIN_TOKEN'],
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        add_to_search_list: true
      )

      match(
        api_key: api_key,
        type: "appstore",
        keychain_name: "CI",
        keychain_password: ENV['KEYCHAIN_TOKEN']
      )

    else
      match(api_key: api_key,type: "appstore")
    end

    

    gym(workspace: "Moonlet.xcworkspace", 
      scheme: "Moonlet_beta", 
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.moonlet.beta" => "match AppStore com.moonlet.beta"
        },
        "signingStyle": "manual",
        compileBitcode: false
      })


    
    
    pilot(
      api_key: api_key,
      changelog: changelog,
      beta_app_description: "Moonlet Beta App " + get_version_number(target:"Moonlet_beta"),
      beta_app_feedback_email: "tibi@moonlet.xyz",
      skip_waiting_for_build_processing: true,
      distribute_external: false,
    )

  end

  lane :deploy do

    package = load_json(json_path: "../package.json")
    increment_version_number(version_number: package["version"])
    increment_build_number(build_number: number_of_commits)

    api_key = app_store_connect_api_key(
      key_id:  ENV['APPSTORE_KEY_ID'],
      issuer_id:  ENV['APPSTORE_ISSUER_ID'],
      key_filepath: "AuthKey.p8"
    )


    match(api_key: api_key, type: "appstore")
    if is_ci
      create_keychain(
        name: "CI",
        password: ENV['KEYCHAIN_TOKEN'],
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        add_to_search_list: true
      )

      match(
        api_key: api_key,
        type: "appstore",
        keychain_name: "CI",
        keychain_password: ENV['KEYCHAIN_TOKEN']
      )

    else
      match(api_key: api_key, type: "appstore")
    end
 
    gym(workspace: "Moonlet.xcworkspace", 
      scheme: "Moonlet", 
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.moonlet" => "match AppStore com.moonlet"
        },
        "signingStyle": "manual",
        compileBitcode: false
      })
    
      upload_to_app_store(api_key: api_key, force: true, app_identifier: "com.moonlet", submit_for_review: true, phased_release: false, automatic_release: false, 
        submission_information: { add_id_info_uses_idfa: false })
  

  end
  
end
