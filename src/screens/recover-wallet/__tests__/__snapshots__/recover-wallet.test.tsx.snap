// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`creat wallet terms screen component fills first input corectly 1`] = `ShallowWrapper {}`;

exports[`creat wallet terms screen component renders correctly 1`] = `
"<View style={{...}}>
  <View style={{...}}>
    <View style={{...}}>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          1.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          2.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          3.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          4.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
    </View>
    <View style={{...}}>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          5.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          6.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          7.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          8.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
    </View>
    <View style={{...}}>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          9.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          10.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          11.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          12.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
    </View>
    <View style={{...}}>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          13.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          14.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          15.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          16.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
    </View>
    <View style={{...}}>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          17.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          18.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          19.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          20.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
    </View>
    <View style={{...}}>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          21.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          22.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          23.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
      <View style={{...}}>
        <withTheme(TextComponent) small={true} style={{...}}>
          24.
        </withTheme(TextComponent)>
        <withTheme(TextInputComponent) obRef={[Function: obRef]} style={{...}} word=\\"\\" onFocus={[Function: onFocus]} onBlur={[Function: onBlur]} />
      </View>
    </View>
  </View>
  <ScrollViewMock horizontal={true} overScrollMode=\\"never\\" snapToAlignment=\\"start\\" showsHorizontalScrollIndicator={false} contentContainerStyle={{...}} keyboardShouldPersistTaps=\\"handled\\" />
  <withTheme(KeyboardComponent) handleTextUpdate={[Function: handleTextUpdate]} handleDeleteKey={[Function: handleDeleteKey]} buttons={{...}} footerButton={{...}} />
  <withTheme(PasswordModalComponent) subtitle=\\"Your PIN is required to view mnemonic\\" obRef={[Function: obRef]} />
</View>"
`;

exports[`creat wallet terms screen component sets correct navigation options 1`] = `
<withTheme(HeaderLeftComponent)
  icon="arrow-left-1"
  onPress={[Function]}
  text="Back"
/>
`;

exports[`creat wallet terms screen component sets correct navigation options 2`] = `
Object {
  "headerLeft": [Function],
  "title": "Recover",
}
`;
